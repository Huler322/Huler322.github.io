{"version":3,"sources":["components/img/book.png","Header.js","Footer.js","components/pages/mainPage.js","components/pages/news.js","components/arrTest/englishArr.js","components/pages-test/english.js","components/pages/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","Logo","alt","Footer","MainPage","News","EnglishArr","question","answer","text","correct","English","useState","numberID","setNumberId","counterRight","setCounterRight","start","setStart","seconds","minutes","timer","setTimer","HandleCorrectAnswers","length","onClick","TimerReload","useEffect","id","setInterval","clearInterval","RenderQuestionCard","currentQuestion","map","item","index","key","checkAnswer","Main","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","history","createHistory","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d0de745.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book.b6f28417.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from './components/img/book.png';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header>\r\n            <div className=\"logo\">\r\n                <Link to =\"/\"><img src={Logo} alt='Logotip'/></Link>\r\n            </div>\r\n            <div className=\"navigation\">\r\n                <Link to =\"/\">Главная</Link>\r\n                <Link to =\"/news\">Новости</Link>\r\n                {/* <Link to =\"/news\">Контакты</Link> */}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        < >\r\n            <footer>\r\n                    <p>Made with God's help</p>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst MainPage = () => (\r\n        <div className = \"main-page\">\r\n            <Link to =\"/englishTest\">Тест по английскому</Link>\r\n        </div>\r\n    )\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return(\r\n        <div className = \"main-page\">\r\n            <p>Новость 1</p>\r\n            <p>Новость 2</p>\r\n            <p>Новость 3</p>\r\n            <p>Новость 4</p>\r\n            <p>Новость 5</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","const EnglishArr = [\r\n    {\r\n      question: 'Переведите слово \"play\"',\r\n      answer: [\r\n        {\r\n          text: 'играть',\r\n          correct: true,\r\n        },\r\n        {\r\n          text: 'кошелек',\r\n          correct: false,\r\n        },\r\n        {\r\n            text: 'игра',\r\n            correct: false,\r\n        },\r\n        {\r\n          text: 'платить',\r\n          correct: false,\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: 'Переведите слово \"show\"',\r\n      answer: [\r\n        {\r\n            text: 'увидеть',\r\n            correct: false,\r\n          },\r\n          {\r\n            text: 'снег',\r\n            correct: false,\r\n          },\r\n        {\r\n          text: 'показывать',\r\n          correct: true,\r\n        },\r\n        {\r\n          text: 'знать',\r\n          correct: false,\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      question: 'Переведите слово \"water\"',\r\n      answer: [\r\n        {\r\n          text: 'водяной',\r\n          correct: false,\r\n        },\r\n        {\r\n          text: 'огонь',\r\n          correct: false,\r\n        },\r\n        {\r\n            text: 'копать',\r\n            correct: false,\r\n        },\r\n        {\r\n            text: 'вода',\r\n            correct: true,\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      question: 'Переведите слово \"read\"',\r\n      answer: [\r\n        {\r\n          text: 'читать',\r\n          correct: true,\r\n        },\r\n        {\r\n          text: 'видеть',\r\n          correct: false,\r\n        },\r\n        {\r\n            text: 'нести',\r\n            correct: false,\r\n        },\r\n        {\r\n            text: 'еда',\r\n            correct: false,\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      question: 'Переведите слово \"change\"',\r\n      answer: [\r\n        {\r\n          text: 'учить',\r\n          correct: false,\r\n        },\r\n        {\r\n          text: 'правиьно',\r\n          correct: false,\r\n        },\r\n        {\r\n            text: 'менять',\r\n            correct: true,\r\n        },\r\n        {\r\n            text: 'дом',\r\n            correct: false,\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      question: 'Переведите слово \"animal\"',\r\n      answer: [\r\n        {\r\n          text: 'животное',\r\n          correct: true,\r\n        },\r\n        {\r\n          text: 'мир',\r\n          correct: false,\r\n        },\r\n        {\r\n            text: 'работа',\r\n            correct: false,\r\n        },\r\n        {\r\n            text: 'слово',\r\n            correct: false,\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      question: 'Переведите слово \"think\"',\r\n      answer: [\r\n        {\r\n          text: 'знать',\r\n          correct: false,\r\n        },\r\n        {\r\n          text: 'чувствовать',\r\n          correct: false,\r\n        },\r\n        {\r\n            text: 'красть',\r\n            correct: false,\r\n        },\r\n        {\r\n            text: 'думать',\r\n            correct: true,\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      question: 'Переведите слово \"use\"',\r\n      answer: [\r\n        {\r\n          text: 'ты',\r\n          correct: false,\r\n        },\r\n        {\r\n          text: 'твой',\r\n          correct: false,\r\n        },\r\n        {\r\n            text: 'использовать',\r\n            correct: true,\r\n        },\r\n        {\r\n            text: 'писать',\r\n            correct: false,\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      question: 'Переведите слово \"day\"',\r\n      answer: [\r\n        {\r\n          text: 'опасно',\r\n          correct: false,\r\n        },\r\n        {\r\n          text: 'сегодня',\r\n          correct: false,\r\n        },\r\n        {\r\n            text: 'цветы',\r\n            correct: false,\r\n        },\r\n        {\r\n            text: 'день',\r\n            correct: true,\r\n        },\r\n      ]\r\n    },\r\n  ]\r\nexport default EnglishArr;","import React, {useEffect, useState} from 'react';\r\nimport '../../style-test.scss';\r\nimport EnglishArr from '../arrTest/englishArr';\r\n\r\nconst English = () => {\r\n    const [numberID, setNumberId ] = useState(0);\r\n    const [counterRight, setCounterRight ] = useState(0);\r\n    const [start, setStart] = useState(0);\r\n    const [timer, setTimer] = useState({\r\n       seconds: 59,\r\n       minutes: 1, \r\n    });\r\n\r\n    const checkAnswer = (item) => {\r\n        if(item.correct ) {\r\n            setCounterRight(counterRight + 1)\r\n            setNumberId(numberID + 1)\r\n        }\r\n        else {\r\n            setNumberId(numberID + 1)\r\n        }\r\n    } \r\n    const handleTest = () => {\r\n        setNumberId(0)\r\n        setCounterRight(0)\r\n        setTimer({\r\n            seconds: 59,\r\n            minutes: 1\r\n        })\r\n    }\r\n\r\n    const HandleCorrectAnswers = () => {\r\n        return (<div className=\"allCorrectAnswer\">\r\n        <h3>Количевство правильных ответов <span>{counterRight} / {EnglishArr.length}</span></h3>\r\n        <button onClick={ () => handleTest()}>Начать заново</button>\r\n        </div>)\r\n    }\r\n\r\n    const TimerReload = () => {\r\n        useEffect(() => {\r\n            let id = setInterval(() => {\r\n                if(timer.seconds === 0 && timer.minutes === 0) {\r\n                    return () => {\r\n                        setNumberId(EnglishArr.length);\r\n                        HandleCorrectAnswers();\r\n                        clearInterval(id);\r\n                    }\r\n                }\r\n                else {\r\n                    if(timer.seconds === 0) {\r\n                        setTimer({\r\n                            seconds: 59,\r\n                            minutes: timer.minutes - 1\r\n                        })\r\n                    }\r\n                    else {\r\n                        setTimer({\r\n                            seconds: timer.seconds - 1,\r\n                            minutes: timer.minutes\r\n                        })\r\n                    }\r\n                }\r\n                \r\n                \r\n                \r\n            }, 1000);\r\n            return () => {\r\n                clearInterval(id);\r\n                \r\n            }\r\n          });\r\n\r\n          if(timer.seconds === 0 && timer.minutes === 0){\r\n            return  <>\r\n                {HandleCorrectAnswers()}\r\n                </>\r\n            }\r\n          if(timer.seconds < 10) {\r\n            return <div>\r\n                <p>Оставшееся время: {timer.minutes}:0{timer.seconds}</p>\r\n            </div>\r\n            \r\n          }\r\n          else {\r\n            return <div>\r\n            <p>Оставшееся время: {timer.minutes}:{timer.seconds}</p>\r\n            </div>\r\n          }\r\n    \r\n    }\r\nconst RenderQuestionCard = () => {\r\n    if(EnglishArr[numberID] ) {\r\n        const currentQuestion = EnglishArr[numberID];\r\n        \r\n        return (\r\n            <div className=\"quiz\">\r\n                <h2>{numberID + 1} вопрос из {EnglishArr.length}</h2>\r\n                <h1>{currentQuestion.question}</h1>\r\n                <div className=\"allAnswer\">\r\n                {currentQuestion.answer.map((item,index) => {\r\n                    return <div key={index}>\r\n                        <p onClick={ () => checkAnswer(item)}>{item.text}</p>\r\n                    </div>\r\n                })}\r\n                </div>\r\n                <div>\r\n                <TimerReload/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else { return <>\r\n    {HandleCorrectAnswers()}\r\n    </>\r\n    }\r\n}\r\n\r\n\r\n\r\nconst WelcomeScreen = () => {\r\n    if(start === 1 && !(timer.seconds === 0 && timer.minutes === 0)){\r\n        return <div className=\"someTest\">\r\n        {RenderQuestionCard()}\r\n    </div>\r\n    }\r\n    if((timer.seconds === 0 && timer.minutes === 0)) {\r\n        return <>\r\n    {HandleCorrectAnswers()}\r\n    </>\r\n    }\r\n    return <div className=\"welcome\">\r\n        <h1>Тест по английскому</h1>\r\n        <p>Всего вопросов {EnglishArr.length}</p>\r\n        <p>Время на тест <b>2:00</b></p>\r\n            \r\n        \r\n        <button onClick={ () => setStart(1)}>Начать тест</button>\r\n    </div>\r\n}\r\n    return <div className=\"someTest\">\r\n        {WelcomeScreen()}\r\n    </div>\r\n}\r\n\r\nexport default English;","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\n// import {browserHistory, Router} from 'react-router';\r\nimport MainPage from './mainPage';\r\nimport News from './news';\r\nimport English from '../../components/pages-test/english';\r\n\r\n// browserHistory.listen(location => {\r\n//     browserHistory.push('/super/url');\r\n//   });\r\n \r\nconst Main = () => (\r\n        <Switch>\r\n            <Route exact path='/' component={MainPage}/>\r\n            <Route path='/news' component={News}/>\r\n            <Route path='/englishTest' component={English}/>\r\n        </Switch>\r\n    )\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './components/pages/main';\n\n\nconst App = () => (\n    < >\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport createHistory from \"history/createBrowserHistory\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router history={createHistory()}>\n          <App />\n        </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}